// Telegram API
if (window.Telegram) {
  Telegram.WebApp.ready();
  Telegram.WebApp.MainButton.setText("–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é");
  Telegram.WebApp.MainButton.show();
}

// –ü–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
function showPage(id) {
  document.querySelectorAll('.page').forEach(p => p.classList.remove('active'));
  document.getElementById(id).classList.add('active');
}

// –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
const products = Array.from({ length: 70 }, (_, i) => ({
  name: `–¢–æ–≤–∞—Ä #${i+1}`,
  category: ["–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞","–û–¥–µ–∂–¥–∞","–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã"][i % 3],
  stock: Math.floor(Math.random() * 200),
  price: (Math.random() * 5000 + 500).toFixed(0),
  competitorPrice: (Math.random() * 5000 + 500).toFixed(0),
  photo: "https://via.placeholder.com/50"
}));

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞
function renderDashboard() {
  document.getElementById("total-products").textContent = products.length;
  const issues = products.filter(p => p.stock === 0 || Number(p.price) > Number(p.competitorPrice) * 1.1);
  document.getElementById("issues-count").textContent = issues.length;
  document.getElementById("time-saved").textContent = "8 —á / –Ω–µ–¥–µ–ª—é";
  document.getElementById("lost-sales").textContent = "45 000 ‚ÇΩ";
  document.getElementById("achievements").innerHTML = `<p>üèÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: –ù–µ–¥–µ–ª—è –±–µ–∑ –ø—Ä–æ—Å—Ç–æ–µ–≤</p>`;
}

// –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤
function renderProducts() {
  const tbody = document.getElementById("product-table");
  tbody.innerHTML = "";
  products.forEach(p => {
    const status = p.stock === 0 ? "‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏" : "‚úÖ –í –Ω–∞–ª–∏—á–∏–∏";
    tbody.innerHTML += `
      <tr>
        <td><img src="${p.photo}"></td>
        <td>${p.name}</td>
        <td>${p.category}</td>
        <td>${p.stock}</td>
        <td>${p.price}</td>
        <td>${status}</td>
      </tr>
    `;
  });
}

// –¢–∞–±–ª–∏—Ü–∞ —Ü–µ–Ω
function renderPrices() {
  const tbody = document.getElementById("price-table");
  tbody.innerHTML = "";
  products.slice(0,10).forEach(p => {
    let rec = "–û–∫";
    if (Number(p.price) > Number(p.competitorPrice) * 1.05) rec = "–°–Ω–∏–∑–∏—Ç—å";
    if (Number(p.price) < Number(p.competitorPrice) * 0.95) rec = "–ü–æ–≤—ã—Å–∏—Ç—å";
    tbody.innerHTML += `
      <tr>
        <td>${p.name}</td>
        <td>${p.price}</td>
        <td>${p.competitorPrice}</td>
        <td>${rec}</td>
      </tr>
    `;
  });
}

// –ì—Ä–∞—Ñ–∏–∫–∏
function renderCharts() {
  new Chart(document.getElementById("salesChart"), {
    type: 'line',
    data: {
      labels: ["–ü–Ω","–í—Ç","–°—Ä","–ß—Ç","–ü—Ç","–°–±","–í—Å"],
      datasets: [{ label: '–ü—Ä–æ–¥–∞–∂–∏ (‚ÇΩ)', data: [12000,15000,10000,18000,20000,25000,22000] }]
    }
  });
  new Chart(document.getElementById("stockChart"), {
    type: 'bar',
    data: {
      labels: ["–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞","–û–¥–µ–∂–¥–∞","–î–µ—Ç—Å–∫–∏–µ"],
      datasets: [{ label: '–û—Å—Ç–∞—Ç–∫–∏', data: [500,300,400] }]
    }
  });
  new Chart(document.getElementById("timeChart"), {
    type: 'doughnut',
    data: {
      labels: ["–°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ","–ü–æ—Ç—Ä–∞—á–µ–Ω–æ"],
      datasets: [{ data: [8,32], backgroundColor:["#4caf50","#ddd"] }]
    }
  });
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–æ–≤
document.getElementById("connect-form").addEventListener("submit", e => {
  e.preventDefault();
  localStorage.setItem("ozonKey", document.getElementById("ozon-key").value);
  localStorage.setItem("wbKey", document.getElementById("wb-key").value);
  alert("–ö–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã (–¥–µ–º–æ)");
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
renderDashboard();
renderProducts();
renderPrices();
renderCharts();
